'<!doctype html>\n<html lang="en" data-theme="dark">\n<head>\n  <meta charset="utf-8" />\n  <meta name="viewport" content="width=device-width, initial-scale=1" />\n  <title>Dashboard ¬∑ Avance por √Årea (Ultra)</title>\n  <style>\n    :root{\n      --bg:#080b13;\n      --bg-2:#0d1320;\n      --panel:#0e1627;\n      --glass:rgba(255,255,255,.06);\n\n      --text:#e9eef7;\n      --muted:#9fb0c7;\n\n      --grid:#22133d;\n      --ring:#1a2a48;\n\n      --ok:#32e685;\n      --warn:#ffd166;\n      --low:#693bff;\n      --danger:#ff5f7a;\n\n      --accent:#78bfae;\n      --primary:#5b9dff;\n\n      --white:#fff;\n      --black:#000;\n\n      --shadow:0 10px 40px rgba(0,0,0,.35);\n      --radius:16px;\n      --gap:16px;\n    }\n\n    [data-theme="light"]{\n      --bg:#f6f8fc;\n      --bg-2:#eef2f9;\n      --panel:#ffffff;\n      --glass:rgba(20,30,60,.08);\n\n      --text:#0e1726;\n      --muted:#4b5b78;\n\n      --grid:#d6deea;\n      --ring:#c8d4e8;\n\n      --shadow:0 10px 28px rgba(15,45,90,.12);\n    }\n\n    *{box-sizing:border-box}\n    html,body{height:100%}\n    body{\n      margin:0;\n      background:radial-gradient(1400px 700px at 10% -10%, #20355f00, #0b1220), var(--bg);\n      color:var(--text);\n      font-family:ui-sans-serif,system-ui,Segoe UI,Roboto,Arial;\n    }\n\n    .wrapper{max-width:1280px;margin:0 auto;padding:20px}\n    header{display:flex;gap:12px;align-items:center;justify-content:space-between;flex-wrap:wrap;margin-bottom:10px}\n    .h-title h1{margin:0;font-size:22px;letter-spacing:.3px}\n    .h-title small{color:var(--muted)}\n\n    .controls{display:flex;gap:8px;flex-wrap:wrap}\n    .controls>*{\n      background:var(--panel);\n      border:1px solid var(--ring);\n      color:var(--text);\n      border-radius:10px;\n      padding:10px 12px;\n      box-shadow:var(--shadow)\n    }\n    .controls input[type=search]{\n      min-width:240px;background:transparent;outline:none;border:none\n    }\n\n    .btn{cursor:pointer;user-select:none}\n    .btn:hover{filter:brightness(1.08)}\n\n    .pill{border-radius:9999px;border:1px solid var(--ring);background:var(--panel);padding:6px 10px;color:var(--muted);font-size:12px}\n\n    .grid{display:grid;grid-template-columns:repeat(12,1fr);gap:var(--gap)}\n    .card{\n      background:linear-gradient(180deg, var(--glass), transparent), var(--panel);\n      border:1px solid var(--ring);\n      border-radius:var(--radius);\n      box-shadow:var(--shadow)\n    }\n    .card.pad{padding:16px}\n\n    /* --- HERO GAUGE --- */\n    .hero{grid-column:span 5;display:flex;align-items:center;justify-content:center;position:relative;overflow:hidden}\n    .hero .inner{width:100%;display:flex;align-items:center;justify-content:center;aspect-ratio:1/1;position:relative}\n    .hero h2{position:absolute;top:16px;left:16px;margin:0;font-size:16px;color:var(--muted)}\n    .hero .val{position:absolute;text-align:center;inset:auto;top:50%;transform:translateY(-50%)}\n    .hero .val .big{font-size:48px;font-weight:900;letter-spacing:.5px}\n    .hero .val .sub{color:var(--muted)}\n    .spark{position:absolute;inset:auto 10% 6% auto;background:radial-gradient(circle at 30% 30%, #fff, #fff0 60%);filter:blur(12px);width:120px;height:120px;opacity:.2}\n\n    /* --- CONSTELLATION GRID --- */\n    .constel{grid-column:span 7;padding:16px}\n    .constel h3{margin:0 0 8px 0;font-size:16px;color:var(--muted)}\n    .tiles{display:grid;grid-template-columns:repeat(3,1fr);gap:14px}\n    .tile{position:relative;padding:10px 12px 12px 12px;border-radius:14px;background:linear-gradient(160deg, var(--glass), transparent);border:1px solid var(--ring);display:flex;align-items:center;gap:12px;overflow:hidden}\n    .tile .name{font-weight:700}\n    .tile .meta{font-size:12px;color:var(--muted)}\n    .tile .orb{width:80px;height:80px;flex:0 0 auto}\n    .tile .spot{position:absolute;inset:-20% -10% auto auto;width:120px;height:120px;background:radial-gradient(closest-side, rgba(255,255,255,.12), transparent);filter:blur(8px)}\n\n    /* --- RANKED BARS --- */\n    .bars{grid-column:span 12;padding:16px}\n    .bars h3{margin:0 0 8px 0;font-size:16px;color:var(--muted)}\n    .tip{color:var(--muted);font-size:12px}\n\n    /* --- KPIs STRIP --- */\n    .kpis{grid-column:span 12;display:grid;grid-template-columns:repeat(4,1fr);gap:var(--gap)}\n    .kpi{display:flex;align-items:center;gap:12px;padding:14px 16px;background:linear-gradient(180deg, var(--glass), transparent), var(--panel);border:1px solid var(--ring);border-radius:14px}\n    .kpi .dot{width:12px;height:12px;border-radius:50%}\n    .kpi h4{margin:0;font-size:12px;color:var(--muted)}\n    .kpi .num{font-size:24px;font-weight:900}\n\n    /* --- Cinematic mode --- */\n    body.cinematic .wrapper{max-width:none}\n    body.cinematic .controls{display:none}\n    body.cinematic header{margin-bottom:0}\n    body.cinematic .grid{gap:12px}\n    body.cinematic .hero{grid-column:span 7}\n    body.cinematic .constel{grid-column:span 5}\n    /* FIX (cinema): reduce indicador principal para evitar scroll */\n    body.cinematic .hero .inner{max-width:420px}\n    body.cinematic .hero .val .big{font-size:36px}\n    body.cinematic .hero .val .sub{font-size:12px}\n\n    /* --- Exit Cinematic floating button --- */\n    .exit-cinema{position:fixed;top:16px;right:16px;z-index:10000;display:none}\n    body.cinematic .exit-cinema{display:inline-flex}\n\n    /* --- Theme toggle --- */\n    .switch{display:inline-flex;gap:8px;align-items:center}\n    .toggle{appearance:none;width:44px;height:24px;border:1px solid var(--ring);border-radius:20px;background:var(--bg-2);position:relative;outline:none;cursor:pointer}\n    .toggle::after{content:"";position:absolute;inset:3px auto auto 3px;width:18px;height:18px;border-radius:50%;background:linear-gradient(180deg,#2bc3ff,#4d86ff);box-shadow:0 2px 8px rgba(0,0,0,.4);transition:transform .2s ease}\n    .toggle:checked::after{transform:translateX(20px)}\n\n    /* --- Accessibility helpers --- */\n    .sr{position:absolute;left:-9999px}\n\n    @media (max-width:1080px){\n      .hero{grid-column:span 12}\n      .constel{grid-column:span 12}\n    }\n    @media (max-width:720px){\n      .tiles{grid-template-columns:repeat(2,1fr)}\n      .kpis{grid-template-columns:repeat(2,1fr)}\n    }\n    @media (max-width:520px){\n      .tiles{grid-template-columns:1fr}\n      .kpis{grid-template-columns:1fr}\n    }\n  </style>\n</head>\n<body>\n  <div class="wrapper">\n    <header>\n      <div class="h-title">\n        <h1>PROGRESSIA ¬∑ Discord Project ¬∑ [ Project Type ]</h1>\n        <small>Advance by Business Unit</small>\n      </div>\n\n      <div class="controls" role="region" aria-label="Controles">\n        <input id="q" type="search" placeholder="/ Search Business Unit‚Ä¶ (HR, PAY, GDPA)" aria-label="Buscar" />\n        <select id="status" aria-label="Filtro de estado">\n          <option value="all">All</option>\n          <option value="done">100%</option>\n          <option value="wip">1‚Äì99%</option>\n          <option value="todo">0%</option>\n        </select>\n\n        <button class="btn pill" data-sort="name" title="Order A‚ÜíZ (tecla: s)">A‚ÜíZ</button>\n        <button class="btn pill" data-sort="progress" title="Order by Advance">Advance</button>\n\n        <div class="switch" title="Theme light/dark">\n          <span>üåô</span><input id="theme" class="toggle" type="checkbox" /><span>‚òÄÔ∏è</span>\n        </div>\n\n        <button id="cinema" class="btn pill" title="Cinematic Mode (key: x)">Cinematic</button>\n        <button id="exportBars" class="btn pill" title="Exportar barras PNG">Bar PNG</button>\n        <button id="exportSVG" class="btn pill" title="Exportar barras SVG">Bar SVG</button>\n        <button id="exportCSV" class="btn pill" title="Exportar CSV">CSV</button>\n      </div>\n    </header>\n\n    <!-- FIX: bot√≥n flotante para salir del modo cinem√°tico -->\n    <button id="exitCinema" class="btn pill exit-cinema" title="Turn off cinematic mode (Esc)">Exit</button>\n\n    <section class="grid">\n      <div class="card hero">\n        <div class="inner">\n          <h2>Progreso Global</h2>\n          <svg id="heroGauge" viewBox="0 0 360 360" width="100%" height="100%" role="img" aria-label="Medidor global"></svg>\n          <div class="val" style="inset:auto; top:50%; transform:translateY(-50%);">\n            <div class="big" id="heroPct">‚Äî%</div>\n            <div class="sub" id="heroCaption">Avg</div>\n          </div>\n          <div class="spark"></div>\n        </div>\n      </div>\n\n      <div class="card constel pad">\n        <h3>BU\'s Constellation</h3>\n        <div class="tiles" id="tiles"></div>\n        <p class="tip">Hover to activate spotlight ¬∑ Click to lock focus ¬∑ Press ESC to release</p>\n      </div>\n\n      <div class="card kpis">\n        <div class="kpi"><div class="dot" style="background:var(--ok)"></div><h4>Completed</h4><div class="num" id="kpiDone">‚Äî</div></div>\n        <div class="kpi"><div class="dot" style="background:var(--warn)"></div><h4>In Progress</h4><div class="num" id="kpiWip">‚Äî</div></div>\n        <div class="kpi"><div class="dot" style="background:var(--danger)"></div><h4>About to Start</h4><div class="num" id="kpiTodo">‚Äî</div></div>\n        <div class="kpi"><div class="dot" style="background:var(--accent)"></div><h4>Total Avg</h4><div class="num" id="kpiAvg">‚Äî%</div></div>\n      </div>\n\n      <div class="card bars pad">\n        <h3>Ranking by Advance</h3>\n        <svg id="bars" viewBox="0 0 1100 460" width="100%" height="100%" role="img" aria-label="Barras de avance"></svg>\n        <p class="tip">Use controls to order and filter ¬∑ Enter to clean up Search Bar</p>\n      </div>\n    </section>\n  </div>\n\n  <script>\n    const DATA = [\n      {key:\'GDPA\', name:\'GDPA\', progress:30},\n      {key:\'P&S\', name:\'P&S\', progress:25},\n      {key:\'SPP\', name:\'SPP\', progress:20},\n      {key:\'ACC\', name:\'ACC\', progress:15},\n      {key:\'SMKG\', name:\'SMKG\', progress:9},\n      {key:\'INV\', name:\'INV\', progress:0},\n      {key:\'PSC\', name:\'PSC\', progress:0},\n      {key:\'CUST I\', name:\'CUST I\', progress:0},\n      {key:\'CUST II\', name:\'CUST II\', progress:0},\n      {key:\'PAY\', name:\'PAY\', progress:100},\n      {key:\'HR\', name:\'HR\', progress:100},\n      {key:\'COMM\', name:\'COMM\', progress:100},\n    ];\n\n    let state = { q:\'\', status:\'all\', sort:\'progress\', theme:\'dark\', pinned:null };\n\n    const $ = (s,root=document)=>root.querySelector(s);\n    const $$ = (s,root=document)=>Array.from(root.querySelectorAll(s));\n    const fmt = n => `${n.toFixed(0)}%`;\n    const getCSS = v => getComputedStyle(document.documentElement).getPropertyValue(v).trim();\n\n    function color(p){\n      if(p===100) return getCSS(\'--ok\');\n      if(p===0) return getCSS(\'--danger\');\n      if(p>=50) return getCSS(\'--warn\');\n      return getCSS(\'--low\');\n    }\n\n    function filtered(){\n      let arr = DATA.filter(d=> d.name.toLowerCase().includes(state.q.toLowerCase()));\n      if(state.status===\'done\') arr = arr.filter(d=>d.progress===100);\n      if(state.status===\'wip\')  arr = arr.filter(d=>d.progress>0 && d.progress<100);\n      if(state.status===\'todo\') arr = arr.filter(d=>d.progress===0);\n\n      if(state.sort===\'name\')  arr.sort((a,b)=>a.name.localeCompare(b.name));\n      if(state.sort===\'progress\') arr.sort((a,b)=>b.progress - a.progress || a.name.localeCompare(b.name));\n      return arr;\n    }\n\n    /* ------------- HERO GAUGE (SVG) ------------- */\n    function drawHero(avg){\n      const svg = $(\'#heroGauge\'); svg.innerHTML=\'\';\n      const W=360,H=360,cx=W/2, cy=H/2, r=130, sw=28, C = 2*Math.PI*r;\n      svg.setAttribute(\'viewBox\', `0 0 ${W} ${H}`);\n\n      const defs = document.createElementNS(\'http://www.w3.org/2000/svg\',\'defs\');\n      const lg = document.createElementNS(\'http://www.w3.org/2000/svg\',\'linearGradient\');\n      lg.id=\'g\'; lg.setAttribute(\'x1\',\'0\'); lg.setAttribute(\'y1\',\'0\'); lg.setAttribute(\'x2\',\'1\'); lg.setAttribute(\'y2\',\'1\');\n      const stops = [[ \'0%\', \'#4fd1ff\'], [\'50%\', \'#7affb3\'], [\'100%\', \'#ffd166\']];\n      stops.forEach(([o,c])=>{const s=document.createElementNS(\'http://www.w3.org/2000/svg\',\'stop\'); s.setAttribute(\'offset\',o); s.setAttribute(\'stop-color\',c); lg.appendChild(s);});\n      const f = document.createElementNS(\'http://www.w3.org/2000/svg\',\'filter\'); f.id=\'glow\';\n      f.innerHTML=\'<feGaussianBlur stdDeviation="6" result="b"/><feMerge><feMergeNode in="b"/><feMergeNode in="SourceGraphic"/></feMerge>\';\n      defs.appendChild(lg); defs.appendChild(f); svg.appendChild(defs);\n\n      const track = document.createElementNS(\'http://www.w3.org/2000/svg\',\'circle\');\n      track.setAttribute(\'cx\',cx); track.setAttribute(\'cy\',cy); track.setAttribute(\'r\',r);\n      track.setAttribute(\'fill\',\'none\'); track.setAttribute(\'stroke\', getCSS(\'--ring\')); track.setAttribute(\'stroke-width\',sw);\n      svg.appendChild(track);\n\n      // grid\n      for(let i=0;i<=10;i++){\n        const a = (i/10)*Math.PI*2 - Math.PI/2, R=r+sw/2, r2=R+8;\n        const x1=cx+Math.cos(a)*R, y1=cy+Math.sin(a)*R, x2=cx+Math.cos(a)*r2, y2=cy+Math.sin(a)*r2;\n        const L=document.createElementNS(\'http://www.w3.org/2000/svg\',\'line\');\n        L.setAttribute(\'x1\',x1); L.setAttribute(\'y1\',y1); L.setAttribute(\'x2\',x2); L.setAttribute(\'y2\',y2);\n        L.setAttribute(\'stroke\', getCSS(\'--grid\')); L.setAttribute(\'stroke-width\', (i%5===0)?2:1);\n        svg.appendChild(L);\n      }\n\n      const arc = document.createElementNS(\'http://www.w3.org/2000/svg\',\'circle\');\n      arc.setAttribute(\'cx\',cx); arc.setAttribute(\'cy\',cy); arc.setAttribute(\'r\',r);\n      arc.setAttribute(\'fill\',\'none\'); arc.setAttribute(\'stroke\',\'url(#g)\');\n      arc.setAttribute(\'stroke-width\',sw); arc.setAttribute(\'stroke-linecap\',\'round\');\n      arc.setAttribute(\'transform\', `rotate(-90 ${cx} ${cy})`);\n      const target = C*(1-avg/100);\n      const t0=performance.now(); const dur=800;\n      function step(t){\n        const k=Math.min(1,(t-t0)/dur); const ease=.5*(1-Math.cos(Math.PI*k));\n        arc.setAttribute(\'stroke-dasharray\', `${C} ${C}`); arc.setAttribute(\'stroke-dashoffset\', target + (C-target)*(1-ease));\n        requestAnimationFrame(step);\n      }\n      arc.setAttribute(\'filter\', \'url(#glow)\');\n      svg.appendChild(arc);\n\n      const comet = document.createElementNS(\'http://www.w3.org/2000/svg\',\'circle\');\n      comet.setAttribute(\'r\',\'6\'); comet.setAttribute(\'fill\', \'#ffffff\'); comet.setAttribute(\'opacity\',\'.9\');\n      svg.appendChild(comet);\n\n      function step2(){\n        const ang = -Math.PI/2 + 2*Math.PI*(avg/100);\n        const rr=r; const x=cx+Math.cos(ang)*rr, y=cy+Math.sin(ang)*rr;\n        comet.setAttribute(\'cx\',x); comet.setAttribute(\'cy\',y);\n        requestAnimationFrame(step2);\n      }\n      requestAnimationFrame(step);\n      requestAnimationFrame(step2);\n    }\n\n    /* ------------- CONSTELLATION TILES ------------- */\n    function orbTile(d){\n      const wrap = document.createElement(\'div\'); wrap.className=\'tile\';\n      wrap.dataset.name=d.name; wrap.dataset.progress=d.progress;\n\n      const svgNS=\'http://www.w3.org/2000/svg\';\n      const svg=document.createElementNS(svgNS,\'svg\'); svg.setAttribute(\'viewBox\',\'0 0 100 100\'); svg.setAttribute(\'class\',\'orb\');\n\n      const defs=document.createElementNS(svgNS,\'defs\');\n      const g=document.createElementNS(svgNS,\'linearGradient\'); g.id=\'g-\'+d.name.replace(/\\W/g,\'\'); g.setAttribute(\'x1\',\'0\'); g.setAttribute(\'y1\',\'0\'); g.setAttribute(\'x2\',\'1\'); g.setAttribute(\'y2\',\'1\');\n      [[\'0%\',\'#5bdcff\'],[\'50%\', color(Math.max(1,d.progress))],[\'100%\',\'#ffd166\']].forEach(([o,c])=>{const s=document.createElementNS(svgNS,\'stop\'); s.setAttribute(\'offset\',o); s.setAttribute(\'stop-color\',c); g.appendChild(s);});\n      defs.appendChild(g); svg.appendChild(defs);\n\n      const r=34, cx=50, cy=50, sw=10, C=2*Math.PI*r;\n      const track=document.createElementNS(svgNS,\'circle\');\n      track.setAttribute(\'cy\',cy); track.setAttribute(\'cx\',cx); track.setAttribute(\'r\',r);\n      track.setAttribute(\'fill\',\'none\'); track.setAttribute(\'stroke\', getCSS(\'--ring\')); track.setAttribute(\'stroke-width\',sw);\n      svg.appendChild(track);\n\n      const fg=document.createElementNS(svgNS,\'circle\');\n      fg.setAttribute(\'cy\',cy); fg.setAttribute(\'cx\',cx); fg.setAttribute(\'r\',r);\n      fg.setAttribute(\'fill\',\'none\'); fg.setAttribute(\'stroke\', `url(#${g.id})`);\n      fg.setAttribute(\'stroke-width\',sw); fg.setAttribute(\'stroke-linecap\',\'round\');\n      fg.setAttribute(\'transform\', `rotate(-90 ${cx} ${cy})`);\n      const target=C*(1-d.progress/100); const t0=performance.now(); const dur=600+d.progress*2;\n      function anim(t){ const k=Math.min(1,(t-t0)/dur); const ease=.5*(1-Math.cos(Math.PI*k));\n        fg.setAttribute(\'stroke-dashoffset\', target + (C-target)*(1-ease));\n        if(k<1) requestAnimationFrame(anim);\n      }\n      fg.setAttribute(\'stroke-dasharray\', `${C} ${C}`);\n      svg.appendChild(fg); requestAnimationFrame(anim);\n\n      const sat=document.createElementNS(svgNS,\'circle\'); sat.setAttribute(\'r\',\'3\'); sat.setAttribute(\'fill\',\'#fff\'); svg.appendChild(sat);\n      function anim2(){\n        const ang=-Math.PI/2 + 2*Math.PI*(d.progress/100);\n        const x=cx + Math.cos(ang)*r, y=cy + Math.sin(ang)*r;\n        sat.setAttribute(\'cx\',x); sat.setAttribute(\'cy\',y);\n        requestAnimationFrame(anim2);\n      }\n      requestAnimationFrame(anim2);\n\n      const info=document.createElement(\'div\'); info.innerHTML=`<div class="name">${d.name}</div><div class="meta">${d.progress}%</div>`;\n      const spot=document.createElement(\'div\'); spot.className=\'spot\';\n      wrap.appendChild(svg); wrap.appendChild(info); wrap.appendChild(spot);\n\n      wrap.addEventListener(\'mouseenter\', ()=> spotlight(d.name,true));\n      wrap.addEventListener(\'mouseleave\', ()=> spotlight(d.name,false));\n      wrap.addEventListener(\'click\', ()=>{ state.pinned = (state.pinned===d.name? null : d.name); apply(); });\n\n      return wrap;\n    }\n\n    function spotlight(name, on){\n      if(state.pinned) return; // si hay selecci√≥n, ignorar hover\n      $$(\'#tiles .tile\').forEach(t=>{\n        t.style.opacity = on ? (t.dataset.name===name? \'1\' : \'.25\') : \'1\';\n      });\n    }\n\n    /* ------------- RANKED BARS ------------- */\n    function drawBars(items){\n      const svg=$(\'#bars\'); svg.innerHTML=\'\';\n      const W=1100,H=460, M={t:40,r:24,b:40,l:150}; const w=W-M.l-M.r, h=H-M.t-M.b;\n      svg.setAttribute(\'viewBox\', `0 0 ${W} ${H}`);\n\n      // grid + etiquetas\n      for(let i=0;i<=10;i++){\n        const x=M.l + (i/10)*w;\n        const L=document.createElementNS(\'http://www.w3.org/2000/svg\',\'line\');\n        L.setAttribute(\'x1\',x); L.setAttribute(\'y1\',M.t); L.setAttribute(\'x2\',x); L.setAttribute(\'y2\',M.t+h);\n        L.setAttribute(\'stroke\', getCSS(\'--grid\')); L.setAttribute(\'stroke-width\', (i%2===0)?2:1);\n        svg.appendChild(L);\n\n        const T=document.createElementNS(\'http://www.w3.org/2000/svg\',\'text\');\n        T.setAttribute(\'x\',x); T.setAttribute(\'y\',M.t-10); T.setAttribute(\'text-anchor\',\'middle\');\n        T.setAttribute(\'font-size\',\'11\'); T.textContent=(i*10)+\'%\'; T.setAttribute(\'fill\', getCSS(\'--text\'));\n        svg.appendChild(T);\n      }\n\n      const barH = Math.min(26, h/items.length - 10);\n      items.forEach((d,i)=>{\n        const y=M.t + i*(barH+10);\n\n        const lab=document.createElementNS(\'http://www.w3.org/2000/svg\',\'text\');\n        lab.setAttribute(\'x\', M.l-12); lab.setAttribute(\'y\', y+barH/2); lab.setAttribute(\'text-anchor\',\'end\');\n        lab.setAttribute(\'dominant-baseline\',\'middle\'); lab.setAttribute(\'font-size\',\'13\');\n        lab.textContent=d.name; lab.setAttribute(\'fill\', getCSS(\'--text\')); svg.appendChild(lab);\n\n        const track=document.createElementNS(\'http://www.w3.org/2000/svg\',\'rect\');\n        track.setAttribute(\'x\',M.l); track.setAttribute(\'y\',y); track.setAttribute(\'width\',w);\n        track.setAttribute(\'height\',barH); track.setAttribute(\'rx\',\'8\'); track.setAttribute(\'fill\', getCSS(\'--ring\'));\n        svg.appendChild(track);\n\n        const defs = svg.querySelector(\'defs\') || document.createElementNS(\'http://www.w3.org/2000/svg\',\'defs\'); if(!svg.querySelector(\'defs\')) svg.appendChild(defs);\n        const gid=\'gb\'+i;\n        const gr=document.createElementNS(\'http://www.w3.org/2000/svg\',\'linearGradient\'); gr.id=gid; gr.setAttribute(\'x1\',\'0\'); gr.setAttribute(\'y1\',\'0\'); gr.setAttribute(\'x2\',\'1\'); gr.setAttribute(\'y2\',\'0\');\n        [[\'0%\', color(Math.max(1,d.progress))], [\'100%\',\'#ffd166\']].forEach(([o,c])=>{const s=document.createElementNS(\'http://www.w3.org/2000/svg\',\'stop\'); s.setAttribute(\'offset\',o); s.setAttribute(\'stop-color\',c); gr.appendChild(s);}); defs.appendChild(gr);\n\n        const bar=document.createElementNS(\'http://www.w3.org/2000/svg\',\'rect\');\n        bar.setAttribute(\'x\',M.l); bar.setAttribute(\'y\',y); bar.setAttribute(\'width\',\'0\');\n        bar.setAttribute(\'height\',barH); bar.setAttribute(\'fill\',`url(#${gid})`);\n        bar.style.filter=\'drop-shadow(0 2px 10px rgba(0,0,0,.2))\'; bar.dataset.target = w*d.progress/100;\n        svg.appendChild(bar);\n\n        const gloss=document.createElementNS(\'http://www.w3.org/2000/svg\',\'rect\');\n        gloss.setAttribute(\'x\',M.l); gloss.setAttribute(\'y\',y); gloss.setAttribute(\'width\',\'0\');\n        gloss.setAttribute(\'height\', Math.max(2,barH*0.35)); gloss.setAttribute(\'rx\',\'6\');\n        gloss.setAttribute(\'fill\', \'#fff\'); gloss.setAttribute(\'opacity\',\'0.18\'); svg.appendChild(gloss);\n\n        const v=document.createElementNS(\'http://www.w3.org/2000/svg\',\'text\');\n        v.setAttribute(\'x\', M.l+4); v.setAttribute(\'y\', y+barH/2); v.setAttribute(\'dominant-baseline\',\'middle\');\n        v.setAttribute(\'font-size\',\'12\'); v.setAttribute(\'fill\', getCSS(\'--text\')); v.textContent = fmt(d.progress); svg.appendChild(v);\n      });\n\n      // ‚úÖ FIX: seleccionar solo las barras animables por su data-attribute\n      const bars = $$(\'rect[data-target]\', svg);\n      const glosses = $$(\'rect[rx="6"]\', svg);\n      bars.forEach((el,idx)=>{\n        const target = +el.dataset.target; const t0=performance.now(); const dur=600;\n        function step(t){ const k=Math.min(1,(t-t0)/dur); const ease=1-Math.pow(1-k,3); const w=target*ease;\n          el.setAttribute(\'width\',w); if(glosses[idx]) glosses[idx].setAttribute(\'width\', Math.max(0,w-6));\n          if(k<1) requestAnimationFrame(step);\n        }\n        requestAnimationFrame(step);\n      });\n    }\n\n    /* ------------- KPIs ------------- */\n    function updateKPIs(items){\n      const done = items.filter(d=>d.progress===100).length;\n      const wip  = items.filter(d=>d.progress>0 && d.progress<100).length;\n      const todo = items.filter(d=>d.progress===0).length;\n      const avg = DATA.reduce((s,d)=>s+d.progress,0)/DATA.length;\n      $(\'#kpiDone\').textContent=done; $(\'#kpiWip\').textContent=wip;\n      $(\'#kpiTodo\').textContent=todo; $(\'#kpiAvg\').textContent=avg.toFixed(2)+\'%\';\n    }\n\n    /* ------------- TILES RENDER ------------- */\n    function renderTiles(items){\n      const box=$(\'#tiles\'); box.innerHTML=\'\';\n      items.forEach(d=> box.appendChild(orbTile(d))); // posiciones fijas\n      if(state.pinned){ $$(\'#tiles .tile\').forEach(t=> t.style.opacity = (t.dataset.name===state.pinned? \'1\' : \'.18\')); }\n    }\n\n    /* ------------- HERO & BARS APPLY ------------- */\n    function apply(){\n      const items = filtered();\n      const avgGlobal = DATA.reduce((s,d)=>s+d.progress,0)/DATA.length;\n      let heroValue = avgGlobal;\n      let heroText = \'Avg\';\n      if(state.pinned){\n        const sel = DATA.find(d=>d.name===state.pinned);\n        if(sel){ heroValue = sel.progress; heroText = sel.name; }\n      }\n      drawHero(heroValue);\n      $(\'#heroPct\').textContent = fmt(heroValue);\n      $(\'#heroCaption\').textContent = heroText;\n\n      renderTiles(items);\n      drawBars(items);\n      updateKPIs(items);\n    }\n\n    /* ------------- CONTROLS ------------- */\n    $(\'#q\').addEventListener(\'input\', e=>{ state.q=e.target.value; apply(); });\n    $(\'#status\').addEventListener(\'change\', e=>{ state.status=e.target.value; apply(); });\n\n    $$(\'button[data-sort]\').forEach(b=> b.addEventListener(\'click\', e=>{\n      state.sort=e.target.dataset.sort; apply();\n    }));\n\n    $(\'#theme\').addEventListener(\'change\', e=>{\n      const theme = e.target.checked ? \'light\' : \'dark\';\n      document.documentElement.setAttribute(\'data-theme\', theme); state.theme=theme; apply();\n    });\n\n    $(\'#cinema\').addEventListener(\'click\', ()=> document.body.classList.toggle(\'cinematic\') );\n    // FIX: bot√≥n de salida del modo cinem√°tico\n    $(\'#exitCinema\').addEventListener(\'click\', ()=>{ document.body.classList.remove(\'cinematic\'); });\n\n    document.addEventListener(\'keydown\', (ev)=>{\n      if(ev.key===\'/\' && document.activeElement.id!==\'q\'){ ev.preventDefault(); $(\'#q\').focus(); }\n      if(ev.key===\'Enter\' && document.activeElement.id===\'q\'){ ev.preventDefault(); $(\'#q\').value=\'\'; state.q=\'\'; apply(); }\n      if(ev.key===\'s\'){ state.sort = (state.sort===\'name\'?\'progress\':\'name\'); apply(); }\n      if(ev.key===\'x\'){ document.body.classList.toggle(\'cinematic\'); }\n      // FIX: ESC primero limpia selecci√≥n; si no hay selecci√≥n, sale del modo cinem√°tico\n      if(ev.key===\'Escape\'){\n        if(state.pinned){ state.pinned=null; apply(); }\n        else if(document.body.classList.contains(\'cinematic\')){\n          document.body.classList.remove(\'cinematic\');\n        }\n      }\n    });\n\n    /* ------------- EXPORTS ------------- */\n    function download(filename, text, type=\'text/plain\'){\n      const a=document.createElement(\'a\'); a.href=URL.createObjectURL(new Blob([text],{type}));\n      a.download=filename; a.click(); URL.revokeObjectURL(a.href);\n    }\n    function svgToPNG(svgEl, w=2200, h=920, filename=\'chart.png\'){\n      const svg = new XMLSerializer().serializeToString(svgEl);\n      const img = new Image(); img.onload=function(){ const c=document.createElement(\'canvas\');\n        c.width=w; c.height=h; const ctx=c.getContext(\'2d\'); ctx.fillStyle=getCSS(\'--bg\');\n        ctx.fillRect(0,0,w,h); ctx.drawImage(img,0,0,w,h); c.toBlob(b=>{ const a=document.createElement(\'a\'); a.href=URL.createObjectURL(b); a.download=filename;\n          a.click(); URL.revokeObjectURL(a.href); }, \'image/png\' );\n      };\n      img.src=\'data:image/svg+xml;base64,\' + btoa(unescape(encodeURIComponent(svg)));\n    }\n\n    $(\'#exportBars\').addEventListener(\'click\', ()=> svgToPNG($(\'#bars\'), 2400, 1000, \'ranking_avance.png\'));\n    $(\'#exportSVG\').addEventListener(\'click\', ()=>{\n      const svg=$(\'#bars\').cloneNode(true); const sty=document.createElement(\'style\');\n      sty.textContent = `text{fill:${getCSS(\'--text\')};font-family:${getComputedStyle(document.body).fontFamily}}`; svg.insertBefore(sty,svg.firstChild);\n      const s=`<?xml version="1.0"?>` + new XMLSerializer().serializeToString(svg);\n      download(\'ranking_avance.svg\', s, \'image/svg+xml\');\n    });\n    $(\'#exportCSV\').addEventListener(\'click\', ()=>{\n      const rows = DATA.map(d=>`${d.name},${d.progress}`).join(\'\\n\');\n      download(\'avance_por_area.csv\',\'area,progress\\n\'+rows,\'text/csv\');\n    });\n\n    /* ------------- INIT ------------- */\n    apply();\n  </script>\n</body>\n</html>\n'